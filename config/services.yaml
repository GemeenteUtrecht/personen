# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    api_documentation:
        servers:
        -   url: //brp.zaakonline.nl/
            description: Sandbox server
        info:
            description: |
                # Welkom innovator!
                Fijn dat je de tijd en moeite hebt genomen om je te verdiepen in dit component. Het  "BRP" component is ontwikkeld voor de gemeente Utrecht en heeft als doel het simuleren van het BRP. Dit component dient alleen gebruikt te worden voor development doeleinden.   

                # Ondersteuning
                Word lid van het slackkanaal [https://zaakonline.slack.com](https://zaakonline.slack.com) voor ondersteuning door het ontwikkel team. En krijg regelmatig updates over de ontwikkelingen op het gebied van de zaakonline componenten.

                # Common ground en open source
                Om het voor alle partijen zo makkelijk mogelijk te maken, stellen we zo veel mogelijk informatie over dit component openbaar beschikbaar.  
                - [datamodel als pdf](/schema/datamodel.pdf)
                - [datamodel als mwb](/schema/datamodel.mwb)
                - [codebase op github](https://github.com/GemeenteUtrecht/mock-basisregistratie-personen)
                - [codebase als zip](https://github.com/GemeenteUtrecht/mock-basisregistratie-personen/master.zip)
                - [docker container](https://hub.docker.com/r/huwelijksplanner/brp-component)
                - [online demo](http://brp.demo.zaakonline.nl/)

                # OpenAPI Specification
                Deze API is gedocumenteerd in het **OpenAPI format** 
                De API bevat Cross-Origin Resource Sharing (CORS) en is geÃ¯mplementeerd volgens de [W3C spec](https://www.w3.org/TR/cors/) standaarden. De API staat cross-domain communicatie van de browser toe. Alle responses hebben een "wildcard same-origin", dit maakt ze openbaar en dus toegankelijk voor iedereen. Dat geldt voor elke code, op elke site.

                # Filteren en Sorteren
                Het is mogelijk om resultaten van deze API te filteren aan de hand van query parameters, deze worden meegegeven in de url tijdens het aanroepen van een endpoint, door extra waarden toe te voegen na een vraagteken. Bijvoorbeeld: ?bronOrganisatie=12345689 (*volledige endpoint  /personen?bronOrganisatie=12345689*), zorgt ervoor dat alleen personen met bronOrganisatie (ofwel rsin/organisatie) 123456789 worden weergegeven.
                
                Voor het filteren op datum geldt dat er een weegmethode moet worden meegegeven, voor de waardes geldt dat elke door [PHP datetime](https://php.net/manual/en/datetime.construct.php) ondersteunde waarde kan worden gebruikt. Verschillende methoden kunnen worden gebruikt om een spreiding te selecteren bijvoorbeeld: */personen?wijzigingsdatum[after]=2019-01-01&wijzigingsdatum[before]=2019-02-01*, om alle personen gewijzigd in Januari 2019 te selecteren.
                
                De mogelijke weegmethoden voor datum vergelijking zijn:
                 - after -> Data groter en gelijk aan
                 - before -> Data kleiner en gelijk aan
                 - strictly_after -> Data groter dan
                 - strictly_before -> Data kleiner dan                                               
                
                Daarnaast kunnen de resultaten ook worden gesorteerd, dit gaat aan de hand van de order parameter, gevolgd door desc (aflopend) of asc (oplopend). Er kunnen meerdere order parameters op volgorde van toepassing worden meegegeven (bijvoorbeeld: https://brp.demo.zaakonline.nl/personen?order[bronOrganisatie]=desc&order[identificatie]=asc)
                
                Kijk voor meer details over de mogelijkheden voor filteren en sorteren bij de GET (verzamel) endpoint van de entiteit die je wilt ophalen.

                # Scopes
                Applicaties kunnen op deze API alleen wijzigingen uitvoeren waarvoor zij over de juiste rechten(scopes) beschikken. De op deze api beschikbare scopes zijn:
                - Personen:schrijven
                - Personen:lezen
                - Personen:maken
                - Personen:verwijderen
                - applicatie:schrijven
                - applicatie:lezen
                - applicatie:maken
                - applicatie:inloggen

                # Authentication
                Voor het gebruik van deze applicatie is een JWT Token nodig, deze hangt altijd vast aan een applicatie (ofwel user). Geldige JWT Tokens worden aangemaakt bij het registreren van een applicatie en kennen een beperkte houdbaarheid. 
                
                JWT Tokens kunnen zowel worden verlengd, als opnieuw worden aangevraagd, dit aan de hand van de applicatie id en sleutel.
                
                Let er bij het meegeven van JWT tokens op dat deze moet worden voorafgegaan door een Bearer en een spatie, onder de header Authorization. De volledig naam wordt daarmee: 'Authorization: Bearer [TOKEN]'.

            version: 0.0.21 Alpha
            title: 'BRP API'
            termsOfService: 'http://www.zaakonline.nl/terms/'
            contact:
                name: API Support
                email: support@conduction.nl
                url: https://github.com/ConductionNL/zaakonline
            x-logo:
                url: '/img/vng.svg'
                altText: VNG Realisatie
            license:
                name: EUPL 1.2
                url: 'https://opensource.org/licenses/EUPL-1.2'
        externalDocs:
            description: Vind hier meer informatie over de zaakonline code base.
            url: 'https://github.com/ConductionNL/zaakonline'
        tags:
              # The general endpoints  
            - name: Persoon
              description: "Dit object beschrijft een natuurlijk persoon."
            - name: Adres
              description: "Dit object beschrijft adres gegevens van een natuurlijk persoon."
            - name: Naam
              description: "Dit object beschrijft naam gegevens van een natuurlijk persoon."
            - name: Overlijden
              description: "Dit object beschrijft het overlijde van een natuurlijk persoon."
            - name: Geboorte
              description: "Dit object beschrijft de geboorte van een natuurlijk persoon."
            - name: Applicatie
              description: "Applicatie gebonden aan een JWT token behorende tot een organisatie."
              # Grouping the endopoint  
        x-tagGroups:
            - name: BRP
              tags:
              - Persoon
              - Adres
              - Naam
              - Overlijden
              - Geboorte
            - name: Applicatie
              tags:
              - Applicatie
 
        
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php, Client}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    
    App\Swagger\SwaggerDecorator:
        #decorates: 'api_platform.swagger.normalizer.documentation'
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments:
            - '@App\Swagger\SwaggerDecorator.inner'
            - '%api_documentation%'
        autoconfigure: false     
    
    # please note that last definitions always *replace* previous ones
    App\Subscriber\TablePrefixSubscriber:
        class: App\Subscriber\TablePrefixSubscriber
        arguments:
            - '%table_prefix%'
        tags: 
            - { name: doctrine.event_subscriber }
